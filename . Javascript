/***** CONFIG: fill these *****/
const ADMIN_EMAILS = ["admin@example.com"];        // who gets email notifications
const ADMIN_PHONES = ["+1XXXXXXXXXX"];            // who gets SMS (Twilio)
const USE_TWILIO = false;                         // set true after you add Twilio creds
const TWILIO = {
  accountSid: "ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
  authToken:  "your_auth_token_here",
  from:       "+1TWILIO_NUMBER"
};
/********************************/

function onFormSubmit(e) {
  const nv = e.namedValues; // all answers by question title

  // Try to read common fields (rename to your exact Form question titles)
  const name  = first(nv["Non konpl√®"]) || first(nv["Non"]) || "";
  const role  = first(nv["W√≤l (Mizisyen / Machann)"]) || "";
  const email = first(nv["Im√®l"]) || first(nv["Email"]) || "";
  const phone = first(nv["Telef√≤n"]) || first(nv["Phone"]) || "";

  // Transaction/Badge ID
  const trxId = "BSS-" + Utilities.formatDate(new Date(), Session.getScriptTimeZone(), "yyyyMMdd-HHmmss");

  // Build a compact summary of all answers for admin email/SMS
  const summary = Object.keys(nv)
    .map(k => `${k}: ${first(nv[k])}`)
    .join("\n");

  // 1) Email receipt to the submitter (if email present)
  if (email) {
    const subject = `BSS ‚Äî Resevwa soum√®t ou (${trxId})`;
    const html = `
      <div style="font-family:Arial,sans-serif">
        <h2>Briyant Soley Signo 1815</h2>
        <p>M√®si, <b>${name || "Patn√®"}</b>! Nou resevwa f√≤m ou.</p>
        <p><b>ID:</b> ${trxId}<br>
           <b>W√≤l:</b> ${role || "-"}</p>
        <p>Resi sa a se pr√®v soum√®t ou.</p>
        <hr><small>¬© BSS 1815</small>
      </div>`;
    GmailApp.sendEmail(email, subject, "Resi BSS", {htmlBody: html});
  }

  // 2) Notify admins by email
  if (ADMIN_EMAILS.length) {
    const subjectA = `BSS ‚Äî Nouvo soum√®t (${trxId}) ‚Ä¢ ${name || role || "Moun"}`
    const bodyA = `ID: ${trxId}\n${summary}`;
    ADMIN_EMAILS.forEach(em => GmailApp.sendEmail(em, subjectA, bodyA));
  }

  // 3) Optional SMS to admins (Twilio)
  if (USE_TWILIO) {
    const sms = `BSS NEW FORM ‚Ä¢ ${name || role || "Moun"} ‚Ä¢ ID ${trxId}`;
    ADMIN_PHONES.forEach(num => sendTwilio(num, sms));
  }

  // 4) Write extra columns (ID + timestamp)
  const sheet = e.range.getSheet();
  const row = e.range.getRow();
  const now = new Date();
  sheet.getRange(row, sheet.getLastColumn()+1).setValue(trxId);
  sheet.getRange(row, sheet.getLastColumn()+2).setValue(now);
}

function first(v){ return (v && v[0]) ? String(v[0]) : ""; }

function sendTwilio(to, body){
  const url = "https://api.twilio.com/2010-04-01/Accounts/"+TWILIO.accountSid+"/Messages.json";
  const options = {
    method: "post",
    payload: { To: to, From: TWILIO.from, Body: body },
    headers: { Authorization: "Basic " + Utilities.base64Encode(TWILIO.accountSid + ":" + TWILIO.authToken) },
    muteHttpExceptions: true
  };
  UrlFetchApp.fetch(url, options);
}
/****  BSS ‚Äî SMS Admin sou Form Submit (Twilio)  ****/

const TWILIO_SID   = 'ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'; // Twilio Account SID
const TWILIO_TOKEN = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'; // Twilio Auth Token
const TWILIO_FROM  = '+1XXXXXXXXXX';                     // Twilio number (E.164)
const ADMINS = [
  '+509XXXXXXXX',   // Admin #1 (E.164)
  '+1XXXXXXXXXX'    // Admin #2 (opsyon√®l)
];

/** Voye SMS atrav√® Twilio */
function sendSMS(to, message) {
  const url = 'https://api.twilio.com/2010-04-01/Accounts/' + TWILIO_SID + '/Messages.json';
  const payload = { To: to, From: TWILIO_FROM, Body: message };
  const options = {
    method: 'post',
    payload,
    headers: { Authorization: 'Basic ' + Utilities.base64Encode(TWILIO_SID + ':' + TWILIO_TOKEN) },
    muteHttpExceptions: true
  };
  const res = UrlFetchApp.fetch(url, options);
  // Logger.log(res.getResponseCode() + ' ' + res.getContentText()); // (si w vle w√® repons)
}

/** KONPIL mesaj otomatikman ak tout chan ki vini nan f√≤m nan */
function buildMessage_(e) {
  // e.namedValues gen { "Header": ["val√®"] }
  const lines = [];
  lines.push('üîî Nouvo tranzaksyon BSS');
  lines.push('‚è± ' + Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'yyyy-MM-dd HH:mm'));
  lines.push('‚Äî ‚Äî ‚Äî');
  Object.keys(e.namedValues).forEach(function (key) {
    // Sote chan vid yo
    const raw = (e.namedValues[key] || []).join(', ').trim();
    if (raw) lines.push(key + ': ' + raw);
  });
  lines.push('‚Äî ‚Äî ‚Äî');
  lines.push('BSS Bot');
  // Limite long√® (Twilio ka segmante, men n ap koupe si tw√≤ long)
  return lines.join('\n').slice(0, 1200);
}

/** Trigger: ap rele otomatikman l√® f√≤m nan soum√®t (via Sheet) */
function onFormSubmit(e) {
  try {
    const msg = buildMessage_(e);
    ADMINS.forEach(function (to) { sendSMS(to, msg); });
  } catch (err) {
    Logger.log('SMS error: ' + err);
  }
}

/** T√®s many√®l (ranvwaye yon SMS vid pou verifye kle yo) */
function testSMS() {
  sendSMS(ADMINS[0], 'T√®s BSS: konfig Twilio mache ‚úÖ');
}
